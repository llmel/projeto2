/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.miniprojeto2;
import java.awt.Color;
import java.util.Random;

/**
 *
 * @author Aluno
 */
public class ProjetoYoshi extends javax.swing.JFrame {
    
    Random sorteador = new Random();
    /**
     * Creates new form ProjetoYoshi
     */
    public ProjetoYoshi() {
        initComponents();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pbProgressoDISCO = new javax.swing.JProgressBar();
        pbProgressoREDE = new javax.swing.JProgressBar();
        pbProgressoCPU = new javax.swing.JProgressBar();
        pbProgressoMEMORIA = new javax.swing.JProgressBar();
        btAtualizar = new javax.swing.JButton();
        LbResultadoDISCO = new javax.swing.JLabel();
        LbResultadoREDE = new javax.swing.JLabel();
        LbResultadoCPU = new javax.swing.JLabel();
        LbResultadoMEMORIA = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("DISCO");

        jLabel2.setText("REDE");

        jLabel3.setText("CPU");

        jLabel4.setText("MEMORIA");

        btAtualizar.setText("ATUALIZAR");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btAtualizar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LbResultadoMEMORIA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                                .addComponent(pbProgressoMEMORIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(LbResultadoCPU)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pbProgressoCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(LbResultadoREDE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pbProgressoREDE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(LbResultadoDISCO)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pbProgressoDISCO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(LbResultadoDISCO))
                    .addComponent(pbProgressoDISCO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(pbProgressoREDE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LbResultadoREDE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(pbProgressoCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LbResultadoCPU))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(pbProgressoMEMORIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LbResultadoMEMORIA))
                .addGap(46, 46, 46)
                .addComponent(btAtualizar)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        
        Integer cpu = sorteador.nextInt(100) + 2;
        Integer memoria = sorteador.nextInt(100) + 2;
        Integer disco = sorteador.nextInt(100) + 2;
        Integer rede = sorteador.nextInt(100) + 2;                
        String resultado_cpu = cpu + "%";
        String resultado_disco = disco + "%";
        String resultado_memoria = memoria + "%";
        String resultado_rede = rede + "%";
        
        
        
        pbProgressoCPU.setValue(cpu);
        pbProgressoDISCO.setValue(disco);
        pbProgressoMEMORIA.setValue(memoria);
        pbProgressoREDE.setValue(rede);
        if(cpu>30 && cpu<=60){
            LbResultadoCPU.setForeground(Color.orange);
        } else if (cpu>60){
           LbResultadoCPU.setForeground(Color.red); 
        } else{
            LbResultadoCPU.setForeground(Color.green);
        }
        


        if(disco>30 && disco<=60){
            LbResultadoDISCO.setForeground(Color.orange);
        } else if (disco>60){
           LbResultadoDISCO.setForeground(Color.red); 
        } else{
            LbResultadoDISCO.setForeground(Color.green);
        }



        if(memoria>30 && memoria<=60){
            LbResultadoMEMORIA.setForeground(Color.orange);
        } else if (memoria>60){
           LbResultadoMEMORIA.setForeground(Color.red); 
        } else{
            LbResultadoMEMORIA.setForeground(Color.green);
        }



        if(rede>30 && rede<=60){
            LbResultadoREDE.setForeground(Color.orange);
        } else if (rede>60){
           LbResultadoREDE.setForeground(Color.red); 
        } else{
            LbResultadoREDE.setForeground(Color.green);
        }
       


        LbResultadoCPU.setText(resultado_cpu);
        LbResultadoMEMORIA.setText(resultado_memoria);
        LbResultadoDISCO.setText(resultado_disco);
        LbResultadoREDE.setText(resultado_rede);
        
        pbProgressoCPU.setForeground(Color.red);
    
    }//GEN-LAST:event_btAtualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjetoYoshi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjetoYoshi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjetoYoshi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjetoYoshi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjetoYoshi().setVisible(true);
            }
       
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LbResultadoCPU;
    private javax.swing.JLabel LbResultadoDISCO;
    private javax.swing.JLabel LbResultadoMEMORIA;
    private javax.swing.JLabel LbResultadoREDE;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JProgressBar pbProgressoCPU;
    private javax.swing.JProgressBar pbProgressoDISCO;
    private javax.swing.JProgressBar pbProgressoMEMORIA;
    private javax.swing.JProgressBar pbProgressoREDE;
    // End of variables declaration//GEN-END:variables
}
